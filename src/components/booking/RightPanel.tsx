import { Card, Segmented, DatePicker, Select, InputNumber } from "antd";
import type { Dayjs } from "dayjs";
import dayjs from "dayjs";
import { slotLabels } from "./mock";

export default function RightPanel({
  tabValue,
  onTabChange,
  stats,
  date,
  setDate,
  timeLabel,
  setTimeLabel,
  people,
  setPeople,
}: {
  tabValue: "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å" | "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á";
  onTabChange: (v: "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å" | "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á") => void;

  stats: { free: number; approve: number; closed: number };

  date: Dayjs;
  setDate: (d: Dayjs) => void;

  timeLabel: string | null;
  setTimeLabel: (s: string | null) => void;

  people: number;
  setPeople: (n: number) => void;
}) {
  return (
    <Card
      className="shadow-sm"
      styles={{ body: { padding: 16 } }}
      style={{ borderRadius: 20 }}
    >
      {/* Tabs ‡∏ö‡∏ô‡∏™‡∏∏‡∏î: 2 ‡∏õ‡∏∏‡πà‡∏° */}
      <div className="mb-4">
        <Segmented
          block
          size="large"
          value={tabValue}
          onChange={(v) => onTabChange(v as any)}
          options={["‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å", "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"]}
          style={{ borderRadius: 14, background: "#EAF0FF", padding: 4 }}
        />
      </div>

      {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ */}
      <div className="text-xl font-semibold mb-2">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà</div>

      {/* ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (‡πÇ‡∏ä‡∏ß‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß) */}
      <div className="grid grid-cols-2 gap-4 mb-6">
        <div className="rounded-2xl bg-emerald-50 border border-emerald-100 p-4 select-none">
          <div className="flex items-start gap-3">
            <div className="text-2xl">üèÉ</div>
            <div>
              <div className="font-semibold text-slate-800 mb-1">‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</div>
              <div className="text-xs text-slate-600">
                ‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ü‡∏¥‡∏ï‡πÄ‡∏ô‡∏™ ‡∏™‡∏ô‡∏≤‡∏°‡∏Å‡∏µ‡∏¨‡∏≤ ‡∏™‡∏ô‡∏≤‡∏°‡πÄ‡∏î‡πá‡∏Å‡πÄ‡∏•‡πà‡∏ô
              </div>
            </div>
          </div>
        </div>

        <div className="rounded-2xl bg-amber-50 border border-amber-100 p-4 select-none">
          <div className="flex items-start gap-3">
            <div className="text-2xl">üè†</div>
            <div>
              <div className="font-semibold text-slate-800 mb-1">‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°</div>
              <div className="text-xs text-slate-600">
                ‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡πÄ‡∏ä‡πà‡∏ô ‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° ‡∏Ñ‡∏•‡∏±‡∏ö‡πÄ‡∏Æ‡∏≤‡∏™‡πå ‡∏•‡∏≤‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */}
      <div className="text-xl font-semibold mb-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á</div>
      <div className="rounded-2xl bg-slate-100/60 border border-slate-200 mb-6">
        {[
          ["‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á", stats.free],
          ["‡∏ñ‡∏π‡∏Å‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß", stats.approve],
          ["‡∏õ‡∏¥‡∏î‡∏ã‡πà‡∏≠‡∏°‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á", stats.closed],
          ["‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ", 4],
        ].map(([label, val], i) => (
          <div
            key={label as string}
            className={`flex items-center justify-between px-4 py-3 text-slate-700 ${
              i !== 3 ? "border-b border-slate-200/70" : ""
            }`}
          >
            <span>{label}</span>
            <span className="font-semibold">{val as number}</span>
          </div>
        ))}
      </div>

      {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
      <div className="text-xl font-semibold mb-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</div>
      <div className="mb-6">
        <DatePicker
          className="w-full h-11 rounded-xl bg-slate-100/70"
          value={date}
          onChange={(d) => setDate(d || dayjs())}
          format="DD/MM/YYYY"
          allowClear={false}
        />
      </div>

      {/* ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ */}
      <div className="text-xl font-semibold mb-2">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤</div>
      <div className="mb-6">
        <Select
          className="w-full [&_.ant-select-selector]:h-11 [&_.ant-select-selection-item]:leading-[44px] rounded-xl"
          placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤"
          value={timeLabel ?? undefined}
          onChange={(v) => setTimeLabel(v)}
          options={slotLabels.map((s) => ({ value: s, label: s }))}
          allowClear
        />
      </div>

      {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô */}
      <div className="text-xl font-semibold mb-2">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô</div>
      <InputNumber
        min={1}
        max={200}
        value={people}
        onChange={(v) => setPeople(Number(v) || 1)}
        className="w-full h-11 rounded-xl"
      />
    </Card>
  );
}
